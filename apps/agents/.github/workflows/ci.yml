name: Multi-Agent System CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: apps/agents/package-lock.json
        
    - name: Install dependencies
      run: |
        cd apps/agents
        npm ci
        
    - name: Run linting
      run: |
        cd apps/agents
        npm run lint
        
    - name: Run tests
      run: |
        cd apps/agents
        npm test
        
    - name: Build project
      run: |
        cd apps/agents
        npm run build
        
    - name: Check TypeScript compilation
      run: |
        cd apps/agents
        npx tsc --noEmit

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: apps/agents/package-lock.json
        
    - name: Install dependencies
      run: |
        cd apps/agents
        npm ci
        
    - name: Run security audit
      run: |
        cd apps/agents
        npm audit --audit-level=moderate
        
    - name: Check for vulnerabilities
      run: |
        cd apps/agents
        npm audit --audit-level=high || exit 1

  integration-test:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: apps/agents/package-lock.json
        
    - name: Install dependencies
      run: |
        cd apps/agents
        npm ci
        
    - name: Start orchestrator
      run: |
        cd apps/agents
        timeout 30s npx tsx src/index.ts &
        sleep 5
        
    - name: Run integration tests
      run: |
        cd apps/agents
        curl -f http://localhost:3001/health || exit 1
        curl -f http://localhost:3001/agents || exit 1
        
    - name: Test agent connections
      run: |
        cd apps/agents
        timeout 20s npx tsx start-agents.ts || true

  documentation:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check documentation completeness
      run: |
        test -f apps/agents/README.md || exit 1
        test -f apps/agents/CHANGELOG.md || exit 1
        test -f apps/agents/LICENSE || exit 1
        
    - name: Validate package.json
      run: |
        cd apps/agents
        npm run validate-package || exit 1

  release:
    runs-on: ubuntu-latest
    needs: [test, security, integration-test, documentation]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: apps/agents/package-lock.json
        
    - name: Install dependencies
      run: |
        cd apps/agents
        npm ci
        
    - name: Build for production
      run: |
        cd apps/agents
        npm run build
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## Multi-Agent Orchestration System v${{ github.run_number }}
          
          ### üöÄ New Features
          - Enhanced agent ecosystem with 5 specialized agents
          - Real-time web dashboard with live monitoring
          - Advanced task management and routing
          - Comprehensive health monitoring
          
          ### üîß Improvements
          - Improved error handling and recovery
          - Enhanced logging and debugging
          - Better performance and scalability
          
          ### üêõ Bug Fixes
          - Fixed TypeScript compilation issues
          - Resolved agent connection problems
          - Improved task assignment logic
          
          ### üì¶ Installation
          ```bash
          cd apps/agents
          npm install
          npm run dev
          ```
          
          ### üéØ Quick Start
          ```bash
          # Start the enhanced system
          npx tsx start-enhanced-system.ts
          
          # Access dashboard
          open http://localhost:3001/dashboard
          ```
        draft: false
        prerelease: false