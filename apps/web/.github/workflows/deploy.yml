name: Deploy Agent Management System

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  NEXT_VERSION: '15.4.3'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        working-directory: apps/web
        run: npm ci

      - name: Run linting
        working-directory: apps/web
        run: npm run lint

      - name: Run type checking
        working-directory: apps/web
        run: npx tsc --noEmit

      - name: Build application
        working-directory: apps/web
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        working-directory: apps/web
        run: npm ci

      - name: Build application
        working-directory: apps/web
        run: npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/web
          vercel-args: '--prod'

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/web
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/agent-management-system:latest
            ${{ secrets.DOCKER_USERNAME }}/agent-management-system:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    needs: [test, deploy, docker-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Agent Management System v${{ github.run_number }}
          body: |
            ## ðŸš€ Agent Management System Release
            
            ### New Features
            - Multi-agent orchestration system
            - Real-time monitoring and communication
            - Modern web interface with glassmorphism design
            - Background service with CLI interface
            - REST API and WebSocket support
            
            ### Technical Improvements
            - Automated deployment pipeline
            - Docker containerization
            - Comprehensive testing
            - TypeScript implementation
            
            ### Documentation
            - Complete API documentation
            - User guides and tutorials
            - System architecture diagrams
            
            ### Deployment
            - Vercel deployment ready
            - Docker image available
            - Environment configuration
            
            ### Files Changed
            - Web application (Next.js)
            - Background service (Node.js)
            - API layer (REST/WebSocket)
            - Documentation and guides
          draft: false
          prerelease: false