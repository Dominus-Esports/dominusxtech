.container {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.container h2 {
  margin: 0 0 1rem 0;
  font-size: 1.4rem;
  font-weight: 600;
  color: #333;
}

.controls {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
  align-items: center;
  flex-wrap: wrap;
}

.filterGroup,
.sortGroup {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.filterGroup label,
.sortGroup label {
  font-size: 0.875rem;
  font-weight: 500;
  color: #6b7280;
}

.select {
  padding: 0.5rem;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  font-size: 0.875rem;
  background: white;
  cursor: pointer;
}

.sortButton {
  background: #f3f4f6;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  padding: 0.5rem 0.75rem;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.sortButton:hover {
  background: #e5e7eb;
}

.taskList {
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding-right: 0.5rem;
}

.taskList::-webkit-scrollbar {
  width: 6px;
}

.taskList::-webkit-scrollbar-track {
  background: #f1f5f9;
  border-radius: 3px;
}

.taskList::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 3px;
}

.taskList::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}

.emptyState {
  text-align: center;
  padding: 2rem;
  color: #6b7280;
}

.emptyIcon {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.taskItem {
  background: white;
  border-radius: 8px;
  padding: 1rem;
  border-left: 4px solid #e5e7eb;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.taskItem:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
}

.taskItem.pending {
  border-left-color: #f59e0b;
  background: #fffbeb;
}

.taskItem.running {
  border-left-color: #3b82f6;
  background: #eff6ff;
}

.taskItem.completed {
  border-left-color: #10b981;
  background: #f0fdf4;
}

.taskItem.failed {
  border-left-color: #ef4444;
  background: #fef2f2;
}

.taskHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.75rem;
}

.taskType {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.typeBadge {
  background: #f3f4f6;
  color: #374151;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 500;
  text-transform: uppercase;
}

.priorityBadge {
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 500;
  text-transform: uppercase;
}

.taskStatus {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
}

.statusDot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.taskContent {
  margin-bottom: 0.75rem;
}

.taskDescription {
  margin: 0 0 0.5rem 0;
  font-size: 0.875rem;
  line-height: 1.4;
  color: #374151;
}

.taskMeta {
  display: flex;
  justify-content: space-between;
  font-size: 0.75rem;
  color: #6b7280;
}

.taskTiming {
  display: flex;
  justify-content: space-between;
  font-size: 0.75rem;
  color: #6b7280;
  margin-bottom: 0.5rem;
  padding: 0.5rem;
  background: rgba(0, 0, 0, 0.05);
  border-radius: 4px;
}

.taskError {
  background: #fef2f2;
  border: 1px solid #fecaca;
  border-radius: 4px;
  padding: 0.5rem;
  margin-top: 0.5rem;
  font-size: 0.875rem;
  color: #dc2626;
}

.taskResult {
  background: #f0fdf4;
  border: 1px solid #bbf7d0;
  border-radius: 4px;
  padding: 0.5rem;
  margin-top: 0.5rem;
  font-size: 0.875rem;
  color: #166534;
}

.summary {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 0.5rem;
  padding-top: 1rem;
  border-top: 1px solid #e5e7eb;
  margin-top: 1rem;
}

.summaryItem {
  text-align: center;
  font-size: 0.875rem;
}

.summaryItem span:first-child {
  display: block;
  color: #6b7280;
  font-weight: 500;
  margin-bottom: 0.25rem;
}

.summaryItem span:last-child {
  display: block;
  font-weight: 700;
  color: #1f2937;
  font-size: 1.125rem;
}

@media (max-width: 768px) {
  .controls {
    flex-direction: column;
    align-items: stretch;
  }
  
  .filterGroup,
  .sortGroup {
    justify-content: space-between;
  }
  
  .summary {
    grid-template-columns: repeat(2, 1fr);
  }
}